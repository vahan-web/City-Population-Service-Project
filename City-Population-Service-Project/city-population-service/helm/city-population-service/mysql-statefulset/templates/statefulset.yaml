apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mysql.fullname" . }}
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.mysql.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.mysql.securityContext | nindent 12 }}
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysql.secretName" . }}
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.auth.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.auth.username | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysql.secretName" . }}
                  key: mysql-password
          ports:
            - name: mysql
              containerPort: {{ .Values.mysql.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - "mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: {{ .Values.mysql.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.mysql.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.mysql.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.mysql.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}"
            initialDelaySeconds: {{ .Values.mysql.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.mysql.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.mysql.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.mysql.readinessProbe.failureThreshold }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: config
              mountPath: /etc/mysql/conf.d/my_custom.cnf
              subPath: my_custom.cnf
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
      {{- with .Values.mysql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mysql.fullname" . }}-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- range .Values.mysql.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        {{- if .Values.mysql.persistence.storageClass }}
        storageClassName: {{ .Values.mysql.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.mysql.persistence.size | quote }}